{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","scene","THREE","camera","window","innerWidth","innerHeight","renderer","setClearColor","setSize","axes","add","planeGeometry","planeMaterial","color","plane","rotation","x","Math","PI","position","set","cubeGeometry","cubeMaterial","wireframe","cube","sphereGeometry","sphereMaterial","sphere","lookAt","document","getElementById","appendChild","domElement","animate","requestAnimationFrame","y","render","id","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","ReactDOM"],"mappings":"8PAkEeA,E,kLA1DT,IAAIC,EAAQ,IAAIC,IACZC,EAAS,IAAID,IAAyB,GAAIE,OAAOC,WAAWD,OAAOE,YAAa,GAAK,KAErFC,EAAW,IAAIL,IACnBK,EAASC,cAAc,IAAIN,IAAY,WACvCK,EAASE,QAASL,OAAOC,WAAYD,OAAOE,aAE5C,IAAII,EAAO,IAAIR,IAAiB,IAChCD,EAAMU,IAAID,GAEV,IAAIE,EAAgB,IAAIV,IAAoB,GAAI,IAC5CW,EAAgB,IAAIX,IAAwB,CAACY,MAAO,WACpDC,EAAQ,IAAIb,IAAWU,EAAeC,GAE1CE,EAAMC,SAASC,GAAK,GAAMC,KAAKC,GAC/BJ,EAAMK,SAASC,IAAK,GAAI,EAAG,GAE3BpB,EAAMU,IAAII,GAEV,IAAIO,EAAe,IAAIpB,IAAmB,EAAG,EAAG,GAC5CqB,EAAe,IAAIrB,IAAyB,CAAEY,MAAO,MAAUU,WAAW,IAC1EC,EAAO,IAAIvB,IAAYoB,EAAcC,GAEzCE,EAAKL,SAASC,KAAM,EAAG,EAAG,GAC1BpB,EAAMU,IAAKc,GAEX,IAAIC,EAAiB,IAAIxB,IAAsB,EAAG,GAAI,IAClDyB,EAAiB,IAAIzB,IAAwB,CAAEY,MAAO,QAAUU,WAAW,IAC3EI,EAAS,IAAI1B,IAAWwB,EAAgBC,GAE5CC,EAAOR,SAASC,IAAK,GAAI,EAAG,GAE5BpB,EAAMU,IAAIiB,GAEVzB,EAAOiB,SAASC,KAAM,GAAI,GAAI,IAC9BlB,EAAO0B,OAAO5B,EAAMmB,UAEAU,SAASC,eAAe,WAChCC,YAAazB,EAAS0B,aAGpB,SAAVC,IACAC,sBAAuBD,GACvBT,EAAKT,SAASC,GAAK,IACnBQ,EAAKT,SAASoB,GAAK,IACnB7B,EAAS8B,OAAQpC,EAAOE,GAE5B+B,K,+BAIE,OACI,qBAAKI,GAAG,gB,GAvDFC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFRQ,EAAcnB,SAASC,eAAe,QAC5CmB,IAASb,OAAO,cAAC,EAAD,IAASY,GAWzBT,M","file":"static/js/main.53f5050f.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  componentDidMount() {\n      // === THREE.JS CODE START ===\n      var scene = new THREE.Scene();\n      var camera = new THREE.PerspectiveCamera( 45, window.innerWidth/window.innerHeight, 0.1, 1000 );\n\n      var renderer = new THREE.WebGLRenderer();\n      renderer.setClearColor(new THREE.Color(0xEEEEEE));\n      renderer.setSize( window.innerWidth, window.innerHeight );\n\n      var axes = new THREE.AxisHelper(20);\n      scene.add(axes);\n\n      var planeGeometry = new THREE.PlaneGeometry(60, 20);\n      var planeMaterial = new THREE.MeshBasicMaterial({color: 0xcccccc});\n      var plane = new THREE.Mesh(planeGeometry, planeMaterial);\n\n      plane.rotation.x = -0.5 * Math.PI;\n      plane.position.set( 15, 0, 0, );\n\n      scene.add(plane);\n\n      var cubeGeometry = new THREE.BoxGeometry( 4, 4, 4 );\n      var cubeMaterial = new THREE.MeshBasicMaterial( { color: 0x00ff00, wireframe: true } );\n      var cube = new THREE.Mesh( cubeGeometry, cubeMaterial );\n\n      cube.position.set( -4, 3, 0 );\n      scene.add( cube );\n\n      var sphereGeometry = new THREE.SphereGeometry( 4, 20, 20 );\n      var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x7777ff, wireframe: true });\n      var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n\n      sphere.position.set( 20, 4, 2 );\n\n      scene.add(sphere);\n\n      camera.position.set( -30, 40, 30 );\n      camera.lookAt(scene.position);\n\n      const rootElement = document.getElementById('threejs');\n      rootElement.appendChild( renderer.domElement );\n      //this.mount.appendChild( renderer.domElement );\n\n      var animate = function () {\n          requestAnimationFrame( animate );\n          cube.rotation.x += 0.01;\n          cube.rotation.y += 0.01;\n          renderer.render( scene, camera );\n      };\n      animate();\n      // === THREE.JS EXAMPLE CODE END ===\n  }\n    render() {\n        return (\n            <div id=\"threejs\" />\n        )\n    }\n}\n//const rootElement = document.getElementById(\"root\");\n//ReactDOM.render(<App />, rootElement);\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n//ReactDOM.render(\n//  <React.StrictMode>\n//    <App />\n//  </React.StrictMode>,\n//  document.getElementById('root')\n//);\n//\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}