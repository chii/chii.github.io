{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","scene","THREE","camera","window","innerWidth","innerHeight","renderer","setSize","document","getElementById","appendChild","domElement","geometry","material","color","cube","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","id","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","ReactDOM"],"mappings":"8PAqCeA,E,kLA7BT,IAAIC,EAAQ,IAAIC,IACZC,EAAS,IAAID,IAAyB,GAAIE,OAAOC,WAAWD,OAAOE,YAAa,GAAK,KACrFC,EAAW,IAAIL,IACnBK,EAASC,QAASJ,OAAOC,WAAYD,OAAOE,aACxBG,SAASC,eAAe,WAChCC,YAAaJ,EAASK,YAElC,IAAIC,EAAW,IAAIX,IAAmB,EAAG,EAAG,GACxCY,EAAW,IAAIZ,IAAyB,CAAEa,MAAO,QACjDC,EAAO,IAAId,IAAYW,EAAUC,GACrCb,EAAMgB,IAAKD,GACXb,EAAOe,SAASC,EAAI,GACN,SAAVC,IACAC,sBAAuBD,GACvBJ,EAAKM,SAASC,GAAK,IACnBP,EAAKM,SAASE,GAAK,IACnBjB,EAASkB,OAAQxB,EAAOE,GAE5BiB,K,+BAIE,OACI,qBAAKM,GAAG,gB,GA1BFC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFRQ,EAAc5B,SAASC,eAAe,QAC5C4B,IAASb,OAAO,cAAC,EAAD,IAASY,GAWzBT,M","file":"static/js/main.11c53239.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  componentDidMount() {\n      // === THREE.JS CODE START ===\n      var scene = new THREE.Scene();\n      var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n      var renderer = new THREE.WebGLRenderer();\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      const rootElement = document.getElementById('threejs');\n      rootElement.appendChild( renderer.domElement );\n      //this.mount.appendChild( renderer.domElement );\n      var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n      var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n      var cube = new THREE.Mesh( geometry, material );\n      scene.add( cube );\n      camera.position.z = 5;\n      var animate = function () {\n          requestAnimationFrame( animate );\n          cube.rotation.x += 0.01;\n          cube.rotation.y += 0.01;\n          renderer.render( scene, camera );\n      };\n      animate();\n      // === THREE.JS EXAMPLE CODE END ===\n  }\n    render() {\n        return (\n            <div id=\"threejs\" />\n        )\n    }\n}\n//const rootElement = document.getElementById(\"root\");\n//ReactDOM.render(<App />, rootElement);\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n//ReactDOM.render(\n//  <React.StrictMode>\n//    <App />\n//  </React.StrictMode>,\n//  document.getElementById('root')\n//);\n//\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}